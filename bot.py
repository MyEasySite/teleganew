import telebot
import random
from config import API_TOKEN
from telebot import types
import os

def numf(message):
	num = str(random.randint(0, 100))
	bot.send_message(message.chat.id, num)
	if num == "100":
		bot.send_message(message.chat.id, "–ü–û–í–ï–ó–õ–û –ü–û–í–ï–ó–õ–û")
		bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAECWnZgslCRG3X2fdSIfbOfVHPrukgFGgACpQ4AAoFdmEnFRfv59ibsoB8E')

def text_doc(message):
	i = 0
	while i < 5:
		i += 1
		filename = "doc\\%.d.txt" % i
		with open(filename, 'r', encoding='utf-8') as f:
			bot.send_message(message.chat.id,f.read())



bot = telebot.TeleBot(API_TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):

	# keyboard
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –¥–æ 100")
	item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
	item3 = types.KeyboardButton("üèû –ö–∞—Ä—Ç–∏–Ω–∫–∞")
	item4 = types.KeyboardButton("–ú–æ—è –∏—Å—Ç–æ—Ä–∏—è")

	markup.add(item1, item2, item3, item4)

	bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(message.from_user, bot.get_me()),
		parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def lalala(message):
	if message.chat.type == 'private':
		if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –¥–æ 100':
			# bot.send_message(message.chat.id, '–ï—Å–ª–∏ —Ç—ã —Å–º–æ–∂–µ—à—å –≤—ã–±–∏—Ç—å "100", —Ç–µ–±—è –∂–¥–µ—Ç –ø—Ä–∏–∫–∞–ª–¥–µ—Å')
			bot.send_message(message.chat.id, numf(message))

		elif message.text == 'üèû –ö–∞—Ä—Ç–∏–Ω–∫–∞':
			all_files_in_directory = os.listdir('images')
			file = random.choice(all_files_in_directory)
			doc = open('images' + '/' + file, 'rb')
			bot.send_photo(message.chat.id, doc)

		# elif message.text == '–ú–æ—è –∏—Å—Ç–æ—Ä–∏—è':
		# 	all_files_in_directory = os.listdir('doc')
		# 	file = random.choice(all_files_in_directory)
		# 	doc = open('doc' + '/' + file, 'r')
		# 	bot.send_message(message.chat.id, doc)
		# 	doc.close()

		elif message.text == '–ú–æ—è –∏—Å—Ç–æ—Ä–∏—è':
			bot.send_message(message.chat.id, text_doc(message))


		elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':
			markup = types.InlineKeyboardMarkup()
			item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
			item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
			markup.add(item1, item2)
			bot.send_message(message.chat.id, '–Ø –∂–∏–≤–æ–π –µ—â–µ, –∞ —Ç—ã –∫–∞–∫ —Å–∞–º?', reply_markup=markup)

		else:
			bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAECWnJgsk9xwHK3o7Fflw0O8V50uULlVAACAQsAAiFckEk_AZ94Qh9ych8E')
			bot.send_message(message.chat.id, '–ß—Ç–æ —Ç—ã –Ω–µ—Å–µ—à—å?')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	try:
		if call.message:
			if call.data == 'good':
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ü–æ –º–∞—Ç–µ—à–µ 3+ –ø–æ–ª—É—á–∏–ª?", parse_mode='Markdown')
				bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAECWnBgsk65pKQ2M4zCBik5KC4GydXqbgACuw0AAhE6mEmvdVVTiLtfPx8E')
				bot.edit_message_reply_markup(call.from_user.id, call.message.message_id)
			elif call.data == 'bad':
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–î–û –Ω–µ –±—É–¥–µ—Ç!", parse_mode='Markdown')
				bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAECWm5gskyWSUbkyHVwcPhRsih3kq1_fAACQg4AAoz-kEncyg3pquNyTx8E')

			# show alert
			# bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
			# 	text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

	except Exception as e:
		print(repr(e))

# RUN
bot.polling(none_stop=True)